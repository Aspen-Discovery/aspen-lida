{
  "openapi" : "3.1.0",
  "info" : {
    "title": "Aspen Discovery API",
    "version": "1.0.0",
    "license": {
      "name": "GPL v2",
      "url": "https://www.gnu.org/licenses/old-licenses/gpl-2.0.txt"
    },
    "description": "The API provided by Aspen Discovery for use in other applications, mobile apps, etc"
  },
  "servers": [
    {
      "url": "https://{aspenDomain}/{basePath}",
      "variables": {
        "aspenDomain": {
          "default": "example.aspendiscovery.org",
          "description": "The URL of the Aspen instance"
        },
        "basePath": {
          "default": "API"
        }
      }
    }
  ],
  "tags": [
    {
      "name": "CommunityAPI"
    },
    {
      "name": "EventAPI"
    },
    {
      "name": "FineAPI"
    },
    {
      "name": "GreenhouseAPI"
    },
    {
      "name": "ItemAPI"
    },
    {
      "name": "ListAPI"
    },
    {
      "name": "RegistrationAPI"
    },
    {
      "name": "SearchAPI"
    },
    {
      "name": "SystemAPI"
    },
    {
      "name": "UserAPI"
    },
    {
      "name": "WorkAPI"
    }
  ],
  "paths": {
    "/UserAPI?method=isLoggedIn": {
      "get": {
        "tags": ["UserAPI"],
        "summary": "Login status",
        "description": "Determines if a user is logged in based on session information in the active browser. Typically not useful because the calling application will not be using the same browser as the patron.",
        "responses" : {
          "200" : {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/UserAPI?method=login": {
      "post" : {
        "tags": ["UserAPI"],
        "summary": "Login user",
        "description": "Logs in the user, sets a cookie indicating that the user is logged in, and returns the session_id for the new session. In general, this method is only useful when called from Aspen itself or from files that share cookies with the Aspen server.",
        "parameters": [
          {
            "in" : "query",
            "name": "username",
            "schema": {
              "type": "string"
            },
            "description": "The username or barcode for the patron",
            "example": "23025003575917"
          },
          {
            "in" : "query",
            "name": "password",
            "schema": {
              "type": "string"
            },
            "description": "The password or pin for the patron",
            "example": "7604"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResult"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    }
  },
  "components": {
      "responses": {
        "BadRequest": {
          "description": "Bad Request - Invalid method or parameters",
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "example": "invalid_method"
            }
          }
        },
        "Unauthorized": {
          "description": "Unauthorized - Request requires authentication",
          "type": "object",
          "properties": {
            "error": {
              "type": "string",
              "example": "unauthorized_access"
            }
          }
        },
        "NotFound": {
          "description": "The specified resource was not found.",
          "type": "object",
          "properties": {
            "error": {
              "type": "string"
            }
          }
        }
      },
      "schemas": {
        "BasicResult": {
        "type": "object",
        "properties": {
          "result" : {
            "type": "boolean"
          }
        }
      },
      "LoginResult": {
        "type": "object",
        "properties": {
          "result" : {
            "type": "object",
            "properties": {
              "success": {
                "type": "boolean",
                "description": "Whether the user login was successful or not",
                "example": "true"
              },
              "message": {
                "type": "string",
                "description": "Additional information about why the login passed or failed for display to the end user"
              },
              "name": {
                "type": "string",
                "nullable": "true",
                "description": "The first and last name of the user if login was successful"
              }
            }
          }
        }
      }
    }
  }
}